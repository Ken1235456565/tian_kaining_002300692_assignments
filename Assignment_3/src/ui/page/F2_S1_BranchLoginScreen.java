/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.page;

import java.awt.CardLayout;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.APP;
import model.Branch;
import model.User;
import model.UserDirectory;
import ui.page.F1_S3_ManageBranches;

/**
 *
 * @author archil
 */
public class F2_S1_BranchLoginScreen extends javax.swing.JPanel {

    JPanel mainWorkArea;
    private UserDirectory userDirectory;
    private APP app;
    private Branch selectedBranch;
    
    /**
     * Creates new form LoginScreen
     */
    public F2_S1_BranchLoginScreen(JPanel mainWorkArea, UserDirectory userDirectory) {
        initComponents();
        this.mainWorkArea = mainWorkArea;
        this.userDirectory = userDirectory;
        this.app = APP.getInstance();
        
        // Call the method to populate the branch dropdown
        populateRoleCombo();
    }
    
    // 实现populateRoleCombo方法
    public void populateRoleCombo() {
        List<Branch> branches = app.getBranches();

        // Clear and set up the dropdown
        cmbBranch.removeAllItems();

        // Check if there are any branches
        if (branches == null || branches.isEmpty()) {
            JOptionPane.showMessageDialog(this, 
                "No branches found in the system. Please create branches first.", 
                "No Branches", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Add branch names
        for (Branch branch : branches) {
            cmbBranch.addItem(branch);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblRole = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        lblSupplier = new javax.swing.JLabel();
        cmbBranch = new javax.swing.JComboBox<>();
        lblBranch = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        lblTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTitle.setText("Login to Branch Manager Workspace");

        lblRole.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRole.setText("User Name:");

        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        lblSupplier.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSupplier.setText("Password:");

        cmbBranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBranchActionPerformed(evt);
            }
        });

        lblBranch.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblBranch.setText("Choose your library branch:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(269, 269, 269)
                        .addComponent(lblTitle))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblRole)
                                    .addComponent(lblSupplier))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(btnLogin))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblBranch)
                                .addGap(18, 18, 18)
                                .addComponent(cmbBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(239, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblRole, lblSupplier});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addComponent(lblTitle)
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbBranch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBranch))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRole)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSupplier)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(btnLogin)
                .addGap(257, 257, 257))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        String username = txtUsername.getText();
        String password = txtPassword.getText();
        
        // Get the selected branch
        selectedBranch = (Branch) cmbBranch.getSelectedItem();
        
        if (selectedBranch == null) {
            JOptionPane.showMessageDialog(this, "Please select a branch.", 
                                         "Branch Required", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        User user = userDirectory.findUserByUsername(username);
        
        // Check if user exists, password matches, role is Branch Manager, and matched with branch
        if (user != null && user.getPassword().equals(password) && 
            user.getProfile().getRole().getRoleName().equals("Branch Manager") &&
            selectedBranch.getManagerName().equals(username)) {
            
            JOptionPane.showMessageDialog(this, "Login Successful!");
            
            // Navigate to branch manager workspace
            F2_S2_BranchNavgtn branchPanel = new F2_S2_BranchNavgtn(mainWorkArea, user);
            mainWorkArea.add("BranchManagerPanel", branchPanel);
            CardLayout layout = (CardLayout) mainWorkArea.getLayout();
            layout.show(mainWorkArea, "BranchManagerPanel");
        } else {
            // More specific error message
            if (user == null || !user.getPassword().equals(password)) {
                JOptionPane.showMessageDialog(this, "Invalid username or password", 
                                             "Login Failed", JOptionPane.ERROR_MESSAGE);
            } else if (!user.getProfile().getRole().getRoleName().equals("Branch Manager")) {
                JOptionPane.showMessageDialog(this, "This user is not a Branch Manager", 
                                             "Unauthorized", JOptionPane.ERROR_MESSAGE);
            } else if (!selectedBranch.getManagerName().equals(username)) {
                JOptionPane.showMessageDialog(this, "This user is not the manager of the selected branch", 
                                             "Wrong Branch", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void cmbBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBranchActionPerformed
        // TODO add your handling code here:
        selectedBranch = (Branch) cmbBranch.getSelectedItem();
        
        // If a branch is selected, you could pre-fill the username field with the manager's name
        if (selectedBranch != null) {
            String managerName = selectedBranch.getManagerName();
            if (managerName != null && !managerName.isEmpty()) {
                txtUsername.setText(managerName);
            }
        }
    }//GEN-LAST:event_cmbBranchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JComboBox<Object> cmbBranch;
    private javax.swing.JLabel lblBranch;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblSupplier;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
    
        
}
