/*
 * CreateProductJPanel.java
 *
 */
package ui.page;

import java.awt.CardLayout;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.event.TableModelEvent;
import model.Book;
import model.Customer;
import model.RentalRequest;

/**
 *
 * @author Rushabh
 */
public class F3_S3_ViewRentalHistory extends javax.swing.JPanel {

    private JPanel workArea;
    private Customer customer;
    private List<RentalRequest> rentalHistory;
    private SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");


    /**
     * Creates new form CreateProductJPanel
     */
    public F3_S3_ViewRentalHistory(JPanel workArea, Customer customer) {
        initComponents();
        this.workArea = workArea;
        this.customer = customer;
        
        // Get the customer's rental history
        this.rentalHistory = customer.viewRentalHistory();
        
        refreshTable();
    }
    
    private void refreshTable() {
        DefaultTableModel model = (DefaultTableModel) tblFeatures.getModel();
        model.setRowCount(0); // Clear existing rows
        
        // Populate the table with rental history data
        for (RentalRequest request : rentalHistory) {
            Object[] row = new Object[4];
            row[0] = request.getBook().getSerialNumber();
            row[1] = request.getBook().getName();
            row[2] = request.getRequestId();
            
            // Convert status to more user-friendly format
            String status = "";
            switch (request.getStatus()) {
                case "PENDING":
                    status = "Pending Approval";
                    break;
                case "APPROVED":
                    status = "Approved";
                    break;
                case "REJECTED":
                    status = "Rejected";
                    break;
                case "RETURNED":
                    status = "Returned";
                    break;
                default:
                    status = request.getStatus();
            }
            row[3] = status;
            
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFeatures = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        lblTitle.setText("View Rental Request");

        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        tblFeatures.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial Numbe", "Book Name", "RequestID", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblFeatures);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(backButton)
                        .addGap(38, 38, 38)
                        .addComponent(lblTitle)))
                .addContainerGap(151, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle)
                    .addComponent(backButton))
                .addGap(64, 64, 64)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(206, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) workArea.getLayout();
    layout.show(workArea, "CustomerNavPanel");
    }//GEN-LAST:event_backButtonActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblFeatures;
    // End of variables declaration//GEN-END:variables
}
