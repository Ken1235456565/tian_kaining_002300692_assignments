/*
 * CreateProductJPanel.java
 *
 */
package ui.page;

import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.event.TableModelEvent;
import model.APP;
import model.Branch;
import model.Library;

/**
 *
 * @author Rushabh
 */
public class F1_S3_ManageBranches extends javax.swing.JPanel {

    JPanel workArea;
    private List<Branch> branchList;
    private APP app;
    
    /**
     * Creates new form CreateProductJPanel
     */
    public F1_S3_ManageBranches(JPanel workArea) {
    this.workArea = workArea;
    this.branchList = new ArrayList<>();
    this.app = APP.getInstance();
    initComponents();
    refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        btnAddBranch = new javax.swing.JButton();
        btnRemoveBranch = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBranches = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        lblTitle.setText("Manage Branches");

        btnAddBranch.setText("New Branch");
        btnAddBranch.setDoubleBuffered(true);
        btnAddBranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddBranchActionPerformed(evt);
            }
        });

        btnRemoveBranch.setText("Delete Branch");
        btnRemoveBranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveBranchActionPerformed(evt);
            }
        });

        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        tblBranches.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BranchID", "Branch Name", "Manager"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblBranches);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btnAddBranch)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemoveBranch))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(backButton)
                        .addGap(38, 38, 38)
                        .addComponent(lblTitle)))
                .addContainerGap(151, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle)
                    .addComponent(backButton))
                .addGap(64, 64, 64)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddBranch)
                    .addComponent(btnRemoveBranch))
                .addContainerGap(177, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        CardLayout layout = (CardLayout) workArea.getLayout();
layout.show(workArea, "AdminPanel");
    }//GEN-LAST:event_backButtonActionPerformed

    private void btnAddBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddBranchActionPerformed
        String branchName = JOptionPane.showInputDialog(this, "Enter Branch Name:");
        if (branchName == null || branchName.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Branch name cannot be empty.");
            return;
        }

        String managerName = JOptionPane.showInputDialog(this, "Enter Manager Name:");
        if (managerName == null || managerName.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Manager name cannot be empty.");
            return;
        }

        Library library = new Library(branchName + " Library");
        Branch newBranch = new Branch("B" + (app.getBranches().size() + 1), branchName, library, managerName);
        app.getBranches().add(newBranch); // Add to the APP singleton's branches list
        JOptionPane.showMessageDialog(this, "Branch added successfully!");

        refreshTable();
    }//GEN-LAST:event_btnAddBranchActionPerformed

    private void btnRemoveBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveBranchActionPerformed
        int selectedRow = tblBranches.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a branch to delete.");
            return;
        }

        String branchID = (String) tblBranches.getValueAt(selectedRow, 0);
        
        // Find the branch to remove
        Branch branchToRemove = null;
        for (Branch branch : app.getBranches()) {
            if (branch.getBranchID().equals(branchID)) {
                branchToRemove = branch;
                break;
            }
        }
        
        if (branchToRemove != null) {
            app.getBranches().remove(branchToRemove);
            JOptionPane.showMessageDialog(this, "Branch deleted successfully.");
            refreshTable();
        }
    }//GEN-LAST:event_btnRemoveBranchActionPerformed

    public void refreshTable() {
        DefaultTableModel model = (DefaultTableModel) tblBranches.getModel();
        model.setRowCount(0);

        for (Branch branch : app.getBranches()) {
            Object[] row = new Object[]{
                branch.getBranchID(),
                branch.getName(),
                branch.getManagerName()
            };
            model.addRow(row);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton btnAddBranch;
    private javax.swing.JButton btnRemoveBranch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblBranches;
    // End of variables declaration//GEN-END:variables
}
