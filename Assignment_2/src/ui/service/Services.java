/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AddSupplier.java
 *
 * Created on Oct 1, 2011, 11:55:16 AM
 */

package ui.service;

import model.Owner;
import model.OwnerDirectory;
import java.awt.CardLayout;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Service;
import model.ServiceCatalog;


/**
 *
 * @author Rushabh
 */
public class Services extends javax.swing.JPanel {

    private JPanel workArea;
    private OwnerDirectory ownerDirectory;
    private ServiceCatalog serviceCatalog;
    
    /** Creates new form AddSupplier */
    public Services(JPanel workArea, OwnerDirectory ownerDirectory, ServiceCatalog serviceCatalog) {
        initComponents();
        this.workArea = workArea;
        this.ownerDirectory = ownerDirectory;
        this.serviceCatalog = serviceCatalog;
    
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblServID = new javax.swing.JLabel();
        txtServID = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        btnCreateService = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        lblServType = new javax.swing.JLabel();
        txtServType = new javax.swing.JTextField();
        txtCost = new javax.swing.JTextField();
        lblCost = new javax.swing.JLabel();
        txtName1 = new javax.swing.JTextField();
        lblName1 = new javax.swing.JLabel();
        lblName2 = new javax.swing.JLabel();
        txtName2 = new javax.swing.JTextField();
        lblName5 = new javax.swing.JLabel();
        txtSD = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        lblServID.setText("Service lD:");

        txtServID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtServIDActionPerformed(evt);
            }
        });

        lblTitle.setText("Services");

        btnCreateService.setText("Create Service");
        btnCreateService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateServiceActionPerformed(evt);
            }
        });

        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        lblServType.setText("Service Type:");

        txtServType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtServTypeActionPerformed(evt);
            }
        });

        txtCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCostActionPerformed(evt);
            }
        });

        lblCost.setText("Cost:");

        txtName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtName1ActionPerformed(evt);
            }
        });

        lblName1.setText("Mechanic's Name1:");

        lblName2.setText("Mechanic's Name2:");

        txtName2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtName2ActionPerformed(evt);
            }
        });

        lblName5.setText("Service Duration:");

        txtSD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(backButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addComponent(lblServID)))
                        .addGap(108, 108, 108)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtServID, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTitle))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblServType)
                            .addComponent(lblCost)
                            .addComponent(lblName1)
                            .addComponent(lblName2)
                            .addComponent(lblName5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCreateService, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtName1, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                                .addComponent(txtCost)
                                .addComponent(txtServType)
                                .addComponent(txtName2)
                                .addComponent(txtSD)))))
                .addContainerGap(398, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton)
                    .addComponent(lblTitle))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtServID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblServID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtServType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblServType))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCost))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName5)
                    .addComponent(txtSD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(btnCreateService)
                .addContainerGap(302, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
       backAction();
    }//GEN-LAST:event_backButtonActionPerformed

    private void btnCreateServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateServiceActionPerformed
        // TODO add your handling code here:
        // Get input values
        String serviceID = txtServID.getText().trim();
        String serviceType = txtServType.getText().trim();
        String costText = txtCost.getText().trim();
        String mechanic1 = txtName1.getText().trim();
        String mechanic2 = txtName2.getText().trim();
        String durationText = txtSD.getText().trim();

        // Validate inputs
        if (serviceID.isEmpty() || serviceType.isEmpty() || costText.isEmpty() || mechanic1.isEmpty() || mechanic2.isEmpty() || durationText.isEmpty()) {
            JOptionPane.showMessageDialog(this, 
                "All fields are required!", 
                "Warning", 
                JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Convert numeric values
        double cost;
        int duration;
        try {
            cost = Double.parseDouble(costText);
            duration = Integer.parseInt(durationText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, 
                "Please enter valid numeric values for cost and duration", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Ensure serviceCatalog is initialized
    if (serviceCatalog == null) {
        serviceCatalog = new ServiceCatalog();
    }

    // Create Service object using the constructor
    Service newService = new Service(
        serviceID,
        serviceType,
        cost,
        mechanic1,
        mechanic2,
        duration
    );

    // Add to catalog
    serviceCatalog.addService(newService);

    // Show success message
    JOptionPane.showMessageDialog(this, 
        "Service successfully added!", 
        "Success", 
        JOptionPane.INFORMATION_MESSAGE);

    // Reset form fields
    txtServID.setText("");
    txtServType.setText("");
    txtCost.setText("");
    txtName1.setText("");
    txtName2.setText("");
    txtSD.setText("");
    }//GEN-LAST:event_btnCreateServiceActionPerformed

    private void txtServIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtServIDActionPerformed
        // TODO add your handling code here:
        try {
            String serviceID = txtServID.getText().trim(); // 获取并转换 ID
            System.out.println("Service ID set to: " + serviceID);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid Service ID! Please enter a number.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtServIDActionPerformed

    private void txtServTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtServTypeActionPerformed
        // TODO add your handling code here:
        String serviceType = txtServType.getText().trim(); // 获取文本
        if (serviceType.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Service Type cannot be empty!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            System.out.println("Service Type set to: " + serviceType);
        }
    }//GEN-LAST:event_txtServTypeActionPerformed

    private void txtCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCostActionPerformed
        // TODO add your handling code here:
        try {
        double cost = Double.parseDouble(txtCost.getText().trim()); // 转换为 double
        if (cost < 0) {
                JOptionPane.showMessageDialog(this, "Cost cannot be negative!", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                System.out.println("Service Cost set to: $" + cost);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid Cost! Please enter a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtCostActionPerformed

    private void txtName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtName1ActionPerformed
        // TODO add your handling code here:
        String mechanicName = txtName1.getText().trim();
        if (mechanicName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mechanic name cannot be empty!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            System.out.println("Mechanic Name set to: " + mechanicName);
        }
    }//GEN-LAST:event_txtName1ActionPerformed

    private void txtName2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtName2ActionPerformed
        // TODO add your handling code here:
        try {
        int duration = Integer.parseInt(txtName2.getText().trim());
        if (duration <= 0) {
                JOptionPane.showMessageDialog(this, "Service Duration must be greater than 0!", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                System.out.println("Service Duration set to: " + duration + " minutes");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid Duration! Please enter a number.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtName2ActionPerformed

    private void txtSDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSDActionPerformed
        // TODO add your handling code here:
        String registrationNumber = txtSD.getText().trim();
        if (registrationNumber.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Registration Number cannot be empty!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            System.out.println("Vehicle Registration Number set to: " + registrationNumber);
        }
    }//GEN-LAST:event_txtSDActionPerformed

      
    private void backAction() {
    workArea.remove(this);  // 先移除当前面板
    CardLayout layout = (CardLayout) workArea.getLayout();
    layout.previous(workArea);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton btnCreateService;
    private javax.swing.JLabel lblCost;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblName2;
    private javax.swing.JLabel lblName5;
    private javax.swing.JLabel lblServID;
    private javax.swing.JLabel lblServType;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtCost;
    private javax.swing.JTextField txtName1;
    private javax.swing.JTextField txtName2;
    private javax.swing.JTextField txtSD;
    private javax.swing.JTextField txtServID;
    private javax.swing.JTextField txtServType;
    // End of variables declaration//GEN-END:variables

}
